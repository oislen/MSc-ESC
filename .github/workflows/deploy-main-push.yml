name: Deployment Workflow

on:
  push:
    branches: [ main ]

jobs:

  release-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Tag Repo
        uses: richardsimko/update-tag@v1
        with:
          tag_name: ${{ vars.REPO_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  trivy-fs-scan:
    needs: release-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner in fs mode
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        exit-code: '1'

  r-unittests:
    needs: release-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.2'
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libfontconfig1-dev
    - name: Install R dependencies
      run: |
        Rscript -e 'install.packages(c("renv", "pak"), repos = "https://cloud.r-project.org")'
    - name: Restore R environment
      shell: Rscript {0}
      run: |
        options(repos = c(CRAN = "https://cran.rstudio.com/"))
        options(renv.config.pak.enabled=TRUE)
        Sys.setenv(RENV_CONFIG_PAK_ENABLED=TRUE)
        renv::restore()
    - name: Execute R Testthat Unittests
      shell: Rscript {0}
      run: |
        renv::load()
        testthat::test_dir('./scripts/utilities/unittests')

  dockerhub-image-push:
    needs: [trivy-fs-scan, r-unittests]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: oislen/msc-esc:latest
          build-args: GIT_BRANCH=main

  trivy-image-scan:
    needs: dockerhub-image-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        trivy-image-ref: oislen/msc-esc:latest
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'